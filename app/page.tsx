"use client"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import {
  Users,
  MapPin,
  Phone,
  Mail,
  Clock,
  AlertTriangle,
  Eye,
  Globe,
  LogOut,
  Shield,
  Award,
  Settings,
} from "lucide-react"
import Link from "next/link"
import { useState, useEffect } from "react"
import { useAuth } from "@/contexts/auth-context"
import GovernmentBanners from "@/components/government-banners"
import { useRouter } from "next/navigation"
import { IUser } from "./lib/model/user"
import { Loader } from "@/components/loader"

const content = {
  en: {
    login: "Login",
    joinUs: "Join Us",
    logout: "Logout",
    welcome: "Welcome",
    projectName: "CivicResolve Jharkhand",
    governmentPortal: "Government of Jharkhand - Civic Portal",
    heroTitle: "Help Fix Your Neighborhood",
    heroSubtitle: "See a problem? Report it. Want to help? Join in.\nTogether we can make our community better.",
    reportProblem: "üö® Report a Problem",
    seeSolutions: "üí° See Solutions",
    loginRequired: "Please login to access this feature",
    aboutTitle: "What is CivicResolve?",
    aboutDescription:
      "It's a simple way for you to report problems in your neighborhood and work with others to fix them. No complicated forms - just easy tools to make your community better.",
    reportProblemsTitle: "Report Problems",
    reportProblemsDesc:
      "Broken streetlight? Pothole on the road? Garbage not collected? Take a photo and tell us where it is. We'll help get it fixed through your Municipal Corporation.",
    workTogetherTitle: "Work Together",
    workTogetherDesc:
      "Meet your neighbors. Share ideas. Work with Ward Councillors and RWA members. When we work together, we can solve bigger problems in our locality.",
    seeProgressTitle: "See Progress",
    seeProgressDesc:
      "Watch as problems get fixed. See what's being worked on. Get updates when Municipal Corporation takes action.",
    currentIssuesTitle: "What's Happening Now",
    needsHelp: "Needs Help",
    workingOnIt: "Working On It",
    fixed: "Fixed!",
    helpFixThis: "Help Fix This",
    joinProject: "Join This Project",
    seeHowFixed: "See How We Fixed It",
    ctaTitle: "Ready to Help Your Neighborhood?",
    ctaDescription:
      "Join thousands of people across India who are making their communities better. It's free, it's easy, and it really works!",
    getStarted: "üöÄ Get Started Now",
    contactUs: "Contact Us",
    call: "Call: +91 98765 43210",
    email: "Email: help@civicresolve.in",
    visit: "Visit: 123 Community Block, Sector 15, New Delhi - 110001",
    openHours: "When We're Open",
    footerTagline: "Making neighborhoods better, one problem at a time.",
    copyright: "¬© 2025 CivicResolve - Building better communities across India",
    adminDashboard: "Admin Dashboard",
    trackMyIssues: "Track My Issues",
    currentDateTime: "Current Date & Time",
  },
  hi: {
    login: "‡§≤‡•â‡§ó‡§ø‡§®",
    joinUs: "‡§π‡§Æ‡§∏‡•á ‡§ú‡•Å‡§°‡§º‡•á‡§Ç",
    logout: "‡§≤‡•â‡§ó‡§Ü‡§â‡§ü",
    welcome: "‡§∏‡•ç‡§µ‡§æ‡§ó‡§§",
    projectName: "‡§∏‡§ø‡§µ‡§ø‡§ï‡§∞‡§ø‡§ú‡§º‡•â‡§≤‡•ç‡§µ ‡§ù‡§æ‡§∞‡§ñ‡§Ç‡§°",
    governmentPortal: "‡§ù‡§æ‡§∞‡§ñ‡§Ç‡§° ‡§∏‡§∞‡§ï‡§æ‡§∞ - ‡§®‡§æ‡§ó‡§∞‡§ø‡§ï ‡§™‡•ã‡§∞‡•ç‡§ü‡§≤",
    heroTitle: "‡§Ö‡§™‡§®‡•á ‡§Æ‡•ã‡§π‡§≤‡•ç‡§≤‡•á ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ‡§è‡§Ç",
    heroSubtitle: "‡§ï‡•ã‡§à ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§¶‡§ø‡§ñ‡•Ä? ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç? ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç‡•§\n‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§π‡§Æ ‡§Ö‡§™‡§®‡•á ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
    reportProblem: "üö® ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç",
    seeSolutions: "üí° ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§¶‡•á‡§ñ‡•á‡§Ç",
    loginRequired: "‡§á‡§∏ ‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•É‡§™‡§Ø‡§æ ‡§≤‡•â‡§ó‡§ø‡§® ‡§ï‡§∞‡•á‡§Ç",
    aboutTitle: "‡§∏‡§ø‡§µ‡§ø‡§ï‡§∞‡§ø‡§ú‡§º‡•â‡§≤‡•ç‡§µ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?",
    aboutDescription:
      "‡§Ø‡§π ‡§Ü‡§™‡§ï‡•á ‡§Æ‡•ã‡§π‡§≤‡•ç‡§≤‡•á ‡§ï‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡§®‡•á ‡§î‡§∞ ‡§¶‡•Ç‡§∏‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§â‡§®‡•ç‡§π‡•á‡§Ç ‡§π‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§Ü‡§∏‡§æ‡§® ‡§§‡§∞‡•Ä‡§ï‡§æ ‡§π‡•à‡•§ ‡§ï‡•ã‡§à ‡§ú‡§ü‡§ø‡§≤ ‡§´‡•â‡§∞‡•ç‡§Æ ‡§®‡§π‡•Ä‡§Ç - ‡§¨‡§∏ ‡§Ü‡§∏‡§æ‡§® ‡§â‡§™‡§ï‡§∞‡§£ ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•á ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ‡§§‡•á ‡§π‡•à‡§Ç‡•§",
    reportProblemsTitle: "‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç",
    reportProblemsDesc:
      "‡§ü‡•Ç‡§ü‡•Ä ‡§∏‡•ç‡§ü‡•ç‡§∞‡•Ä‡§ü ‡§≤‡§æ‡§á‡§ü? ‡§∏‡§°‡§º‡§ï ‡§Æ‡•á‡§Ç ‡§ó‡§°‡•ç‡§¢‡§æ? ‡§ï‡§ö‡§∞‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§â‡§†‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ? ‡§´‡•ã‡§ü‡•ã ‡§≤‡•á‡§Ç ‡§î‡§∞ ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§Ø‡§π ‡§ï‡§π‡§æ‡§Ç ‡§π‡•à‡•§ ‡§π‡§Æ ‡§®‡§ó‡§∞ ‡§®‡§ø‡§ó‡§Æ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§á‡§∏‡•á ‡§†‡•Ä‡§ï ‡§ï‡§∞‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§Ç‡§ó‡•á‡•§",
    workTogetherTitle: "‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç",
    workTogetherDesc:
    "‡§Ö‡§™‡§®‡•á ‡§™‡§°‡§º‡•ã‡§∏‡§ø‡§Ø‡•ã‡§Ç ‡§∏‡•á ‡§Æ‡§ø‡§≤‡•á‡§Ç‡•§ ‡§µ‡§ø‡§ö‡§æ‡§∞ ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§µ‡§æ‡§∞‡•ç‡§° ‡§™‡§æ‡§∞‡•ç‡§∑‡§¶ ‡§î‡§∞ ‡§Ü‡§∞‡§°‡§¨‡•ç‡§≤‡•ç‡§Ø‡•Ç‡§è ‡§∏‡§¶‡§∏‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§ú‡§¨ ‡§π‡§Æ ‡§Æ‡§ø‡§≤‡§ï‡§∞ ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç, ‡§§‡•ã ‡§Ö‡§™‡§®‡•á ‡§á‡§≤‡§æ‡§ï‡•á ‡§ï‡•Ä ‡§¨‡§°‡§º‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡§æ ‡§∏‡§Æ‡§æ‡§ß‡§æ‡§® ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§",
    seeProgressTitle: "‡§™‡•ç‡§∞‡§ó‡§§‡§ø ‡§¶‡•á‡§ñ‡•á‡§Ç",
    seeProgressDesc: "‡§¶‡•á‡§ñ‡•á‡§Ç ‡§ï‡§ø ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§è‡§Ç ‡§ï‡•à‡§∏‡•á ‡§†‡•Ä‡§ï ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à‡§Ç‡•§ ‡§¶‡•á‡§ñ‡•á‡§Ç ‡§ï‡§ø ‡§ï‡§ø‡§∏ ‡§™‡§∞ ‡§ï‡§æ‡§Æ ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à‡•§ ‡§®‡§ó‡§∞ ‡§®‡§ø‡§ó‡§Æ ‡§ï‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§∞‡§µ‡§æ‡§à ‡§™‡§∞ ‡§Ö‡§™‡§°‡•á‡§ü ‡§™‡§æ‡§è‡§Ç‡•§",
    currentIssuesTitle: "‡§Ö‡§≠‡•Ä ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à",
    needsHelp: "‡§Æ‡§¶‡§¶ ‡§ö‡§æ‡§π‡§ø‡§è",
    workingOnIt: "‡§ï‡§æ‡§Æ ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à",
    fixed: "‡§†‡•Ä‡§ï ‡§π‡•ã ‡§ó‡§Ø‡§æ!",
    helpFixThis: "‡§á‡§∏‡•á ‡§†‡•Ä‡§ï ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡•á‡§Ç",
    joinProject: "‡§á‡§∏ ‡§™‡•ç‡§∞‡•ã‡§ú‡•á‡§ï‡•ç‡§ü ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•ã‡§Ç",
    seeHowFixed: "‡§¶‡•á‡§ñ‡•á‡§Ç ‡§π‡§Æ‡§®‡•á ‡§á‡§∏‡•á ‡§ï‡•à‡§∏‡•á ‡§†‡•Ä‡§ï ‡§ï‡§ø‡§Ø‡§æ",
    ctaTitle: "‡§Ö‡§™‡§®‡•á ‡§Æ‡•ã‡§π‡§≤‡•ç‡§≤‡•á ‡§ï‡•Ä ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡§Ç?",
    ctaDescription:
      "‡§≠‡§æ‡§∞‡§§ ‡§≠‡§∞ ‡§ï‡•á ‡§π‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§≤‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ú‡•Å‡§°‡§º‡•á‡§Ç ‡§ú‡•ã ‡§Ö‡§™‡§®‡•á ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ø‡§π ‡§Æ‡•Å‡§´‡•ç‡§§ ‡§π‡•à, ‡§Ü‡§∏‡§æ‡§® ‡§π‡•à, ‡§î‡§∞ ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à!",
    getStarted: "üöÄ ‡§Ö‡§≠‡•Ä ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
    contactUs: "‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",
    call: "‡§´‡•ã‡§®: +91 98765 43210",
    email: "‡§à‡§Æ‡•á‡§≤: help@civicresolve.in",
    visit: "‡§™‡§§‡§æ: 123 ‡§ï‡§Æ‡•ç‡§Ø‡•Å‡§®‡§ø‡§ü‡•Ä ‡§¨‡•ç‡§≤‡•â‡§ï, ‡§∏‡•á‡§ï‡•ç‡§ü‡§∞ 15, ‡§®‡§à ‡§¶‡§ø‡§≤‡•ç‡§≤‡•Ä - 110001",
    openHours: "‡§π‡§Æ‡§æ‡§∞‡§æ ‡§∏‡§Æ‡§Ø",
    footerTagline: "‡§è‡§ï ‡§∏‡§Æ‡§Ø ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ, ‡§Æ‡•ã‡§π‡§≤‡•ç‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§¨‡•á‡§π‡§§‡§∞ ‡§¨‡§®‡§æ‡§®‡§æ‡•§",
    copyright: "¬© 2025 ‡§∏‡§ø‡§µ‡§ø‡§ï‡§∞‡§ø‡§ú‡§º‡•â‡§≤‡•ç‡§µ - ‡§≠‡§æ‡§∞‡§§ ‡§≠‡§∞ ‡§Æ‡•á‡§Ç ‡§¨‡•á‡§π‡§§‡§∞ ‡§∏‡§Æ‡•Å‡§¶‡§æ‡§Ø ‡§¨‡§®‡§æ‡§®‡§æ",
    adminDashboard: "‡§è‡§°‡§Æ‡§ø‡§® ‡§°‡•à‡§∂‡§¨‡•ã‡§∞‡•ç‡§°",
    trackMyIssues: "‡§Æ‡•á‡§∞‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§ü‡•ç‡§∞‡•à‡§ï ‡§ï‡§∞‡•á‡§Ç",
    currentDateTime: "‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§¶‡§ø‡§®‡§æ‡§Ç‡§ï ‡§î‡§∞ ‡§∏‡§Æ‡§Ø",
  },
}

export default function CivicPlatform() {
  const [language, setLanguage] = useState<"en" | "hi">("en")
  const [currentDateTime, setCurrentDateTime] = useState("")
  const { logout } = useAuth()
  const [user,setUser] = useState<IUser | null>(null)
  const [loading,setLoading] = useState(false);

  useEffect(() => {
    const fetchUser = async () => {
      setLoading(true)
      const res = await fetch("/api/cookie");
      const data = await res.json();
      setUser(data.user);
      setLoading(false)
    };
    fetchUser();
  }, []);

  useEffect(() => {
    setLoading(true)
    const savedLanguage = localStorage.getItem("civic-language") as "en" | "hi"
    if (savedLanguage) {
      setLanguage(savedLanguage)
    }
    setLoading(false)
  }, [])

  useEffect(() => {
    setLoading(true)
    const updateDateTime = () => {
      const now = new Date()
      const formatted = now.toLocaleString("en-IN", {
        timeZone: "Asia/Kolkata",
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        hour12: true,
      })
      setCurrentDateTime(formatted)
    }

    updateDateTime()
    const interval = setInterval(updateDateTime, 1000)
    setLoading(false)
    return () => clearInterval(interval)
  }, [])

  const toggleLanguage = () => {
    const newLanguage = language === "en" ? "hi" : "en"
    setLanguage(newLanguage)
    localStorage.setItem("civic-language", newLanguage)
  }
  
  const t = content[language]
  const router = useRouter();
  if(loading) return <Loader/>

  return (
    <div className="min-h-screen bg-background">
      <div className="government-header py-2 px-4 bg-gradient-to-r from-blue-900 via-blue-800 to-green-800">
        <div className="max-w-7xl mx-auto flex items-center justify-between text-white text-sm">
          <div className="flex items-center space-x-2">
            <Shield className="w-4 h-4" />
            <span className="font-medium">{t.governmentPortal}</span>
          </div>
          <div className="flex items-center space-x-4">
            <div className="flex items-center space-x-2">
              <Clock className="w-4 h-4" />
              <span className="font-mono">{currentDateTime}</span>
            </div>
            <div className="flex items-center space-x-2">
              <Award className="w-4 h-4" />
              <span>Digital India Initiative</span>
            </div>
          </div>
        </div>
      </div>

      {/* Navigation */}
      <nav className="border-b-2 border-primary/20 bg-white shadow-sm sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-20">
            {/* Left side - Project Name */}
            <div className="flex items-center">
              <div className="w-10 h-10 government-emblem rounded-xl flex items-center justify-center mr-3 official-seal">
                <Users className="w-6 h-6 text-white" />
              </div>
              <h1 className="text-2xl font-bold text-primary">{t.projectName}</h1>
            </div>

            {/* Center - Main Navigation */}
            <div className="flex items-center space-x-4">
              {user ? (
                <>
                  <Link href="/community">
                    <Button
                      variant="outline"
                      size="lg"
                      className="text-lg font-medium border-2 bg-transparent flex items-center space-x-2 hover:bg-purple-50 hover:border-purple-300"
                    >
                      <Users className="w-5 h-5" />
                      <span>Community</span>
                    </Button>
                  </Link>

                  {user.userType === "user" && (
                    <Link href="/track-progress">
                      <Button
                        variant="outline"
                        size="lg"
                        className="text-lg font-medium border-2 bg-transparent flex items-center space-x-2 hover:bg-green-50 hover:border-green-300"
                      >
                        <Eye className="w-5 h-5" />
                        <span>{t.trackMyIssues}</span>
                      </Button>
                    </Link>
                  )}

                  {user.userType === "admin" && (
                    <Link href="/admin">
                      <Button
                        variant="outline"
                        size="lg"
                        className="text-lg font-medium border-2 bg-transparent flex items-center space-x-2 hover:bg-blue-50 hover:border-blue-300"
                      >
                        <Settings className="w-5 h-5" />
                        <span>{t.adminDashboard}</span>
                      </Button>
                    </Link>
                  )}
                </>
              ) : (
                <div className="flex items-center space-x-4">
                  <Link href="/community">
                    <Button
                      variant="outline"
                      size="lg"
                      className="text-lg font-medium border-2 bg-transparent flex items-center space-x-2 hover:bg-purple-50 hover:border-purple-300"
                    >
                      <Users className="w-5 h-5" />
                      <span>Community</span>
                    </Button>
                  </Link>
                  <Button
                    onClick={() => router.push("/track-progress")}
                    variant="outline"
                    size="lg"
                    className="text-lg font-medium border-2 bg-transparent flex items-center space-x-2 hover:bg-green-50 hover:border-green-300"
                  >
                    <Eye className="w-5 h-5" />
                    <span>{t.trackMyIssues}</span>
                  </Button>
                </div>
              )}
            </div>

            {/* Right side - User Actions and Language Toggle */}
            <div className="flex items-center space-x-4">
              {user ? (
                <div className="flex items-center space-x-3">
                  <span className="text-lg font-medium text-gray-700">
                    {t.welcome}, {user.name}
                  </span>
                  <Button
                    variant="outline"
                    size="lg"
                    onClick={logout}
                    className="text-lg font-medium border-2 bg-transparent flex items-center space-x-2 hover:bg-red-50 hover:border-red-300"
                  >
                    <LogOut className="w-5 h-5" />
                    <span>{t.logout}</span>
                  </Button>
                </div>
              ) : (
                <div className="flex items-center space-x-3">
                  <Link href="/login">
                    <Button
                      variant="outline"
                      size="lg"
                      className="text-lg font-medium border-2 bg-transparent hover:bg-blue-50 hover:border-blue-300"
                    >
                      {t.login}
                    </Button>
                  </Link>
                  <Link href="/signup">
                    <Button size="lg" className="bg-primary text-white hover:bg-primary/90 text-lg font-medium px-6">
                      {t.joinUs}
                    </Button>
                  </Link>
                </div>
              )}

              <Button
                variant="outline"
                size="sm"
                onClick={toggleLanguage}
                className="flex items-center space-x-2 border-2 hover:bg-primary/10 bg-transparent"
              >
                <Globe className="w-4 h-4" />
                <span className="font-medium">{language === "en" ? "‡§π‡§ø‡§Ç‡§¶‡•Ä" : "English"}</span>
              </Button>
            </div>
          </div>
        </div>
      </nav>

      {/* Government Banners Section */}
      <section className="py-6 px-4 sm:px-6 lg:px-8 bg-gradient-to-r from-blue-50 via-white to-green-50">
        <div className="max-w-7xl mx-auto">
          <GovernmentBanners language={language} />
        </div>
      </section>

      <section
        className="py-16 px-4 sm:px-6 lg:px-8 relative"
        style={{
          backgroundImage: "url(/jharkhand-government-bg.jpg)",
          backgroundSize: "cover",
          backgroundPosition: "center",
          backgroundRepeat: "no-repeat",
          minHeight: "600px",
        }}
        role="img"
        aria-label="Jharkhand Government Building - Official Government Portal Background"
      >
        <div className="absolute inset-0 bg-gradient-to-b from-white/80 via-white/70 to-white/80"></div>
        <div className="max-w-6xl mx-auto text-center relative z-10">
          <h2 className="text-5xl font-bold text-gray-900 mb-6 leading-tight">{t.heroTitle}</h2>
          <p className="text-2xl text-gray-700 mb-10 leading-relaxed whitespace-pre-line">{t.heroSubtitle}</p>
          <div className="flex flex-col sm:flex-row gap-6 justify-center max-w-2xl mx-auto">
            <Button
              onClick={() => router.push("/report-issue")}
              size="lg"
              className="flex-1 bg-red-500 hover:bg-red-600 text-white text-xl py-6 px-8 rounded-xl shadow-lg font-semibold border-2 border-red-500 hover:border-red-600 transition-all duration-200 min-w-[200px] hover:shadow-xl transform hover:scale-105"
            >
              {t.reportProblem}
            </Button>
            <Button
              onClick={() => router.push("/track-progress")}
              size="lg"
              variant="outline"
              className="flex-1 border-2 border-green-500 text-green-700 hover:bg-green-50 hover:text-green-800 text-xl py-6 px-8 rounded-xl bg-white font-semibold hover:border-green-600 transition-all duration-200 min-w-[200px] shadow-lg hover:shadow-xl transform hover:scale-105"
            >
              {t.seeSolutions}
            </Button>
          </div>
        </div>
      </section>

      {/* About Section */}
      <section
        className="py-16 px-4 sm:px-6 lg:px-8 relative"
        style={{
          backgroundImage: "url(/jharkhand-government-bg.jpg)",
          backgroundSize: "cover",
          backgroundPosition: "center",
          backgroundRepeat: "no-repeat",
        }}
      >
        <div className="absolute inset-0 bg-white/90"></div>
        <div className="max-w-6xl mx-auto relative z-10">
          <div className="text-center mb-16">
            <h3 className="text-4xl font-bold text-gray-900 mb-6">{t.aboutTitle}</h3>
            <p className="text-xl text-gray-700 max-w-3xl mx-auto leading-relaxed">{t.aboutDescription}</p>
          </div>

          <div className="grid md:grid-cols-3 gap-10 mb-20">
            <Card
              className="border-2 border-red-200 bg-red-50 hover:shadow-lg transition-all duration-300 p-6 cursor-pointer transform hover:scale-105 hover:border-red-300"
              onClick={() => router.push("/report-issue")}
            >
              <CardHeader className="text-center">
                <div className="w-20 h-20 bg-red-500 rounded-full flex items-center justify-center mb-6 mx-auto shadow-lg">
                  <AlertTriangle className="w-10 h-10 text-white" />
                </div>
                <CardTitle className="text-2xl text-gray-900 mb-4">{t.reportProblemsTitle}</CardTitle>
                <CardDescription className="text-lg text-gray-700 leading-relaxed">
                  {t.reportProblemsDesc}
                </CardDescription>
              </CardHeader>
            </Card>

            <Card
              className="border-2 border-blue-200 bg-blue-50 hover:shadow-lg transition-all duration-300 p-6 cursor-pointer transform hover:scale-105 hover:border-blue-300"
              onClick={() => router.push("/track-progress")}
            >
              <CardHeader className="text-center">
                <div className="w-20 h-20 bg-blue-500 rounded-full flex items-center justify-center mb-6 mx-auto shadow-lg">
                  <Users className="w-10 h-10 text-white" />
                </div>
                <CardTitle className="text-2xl text-gray-900 mb-4">{t.workTogetherTitle}</CardTitle>
                <CardDescription className="text-lg text-gray-700 leading-relaxed">
                  {t.workTogetherDesc}
                </CardDescription>
              </CardHeader>
            </Card>

            <Card
              className="border-2 border-green-200 bg-green-50 hover:shadow-lg transition-all duration-300 p-6 cursor-pointer transform hover:scale-105 hover:border-green-300"
              onClick={() => router.push("/track-progress")}
            >
              <CardHeader className="text-center">
                <div className="w-20 h-20 bg-green-500 rounded-full flex items-center justify-center mb-6 mx-auto shadow-lg">
                  <Eye className="w-10 h-10 text-white" />
                </div>
                <CardTitle className="text-2xl text-gray-900 mb-4">{t.seeProgressTitle}</CardTitle>
                <CardDescription className="text-lg text-gray-700 leading-relaxed">{t.seeProgressDesc}</CardDescription>
              </CardHeader>
            </Card>
          </div>

          {/* Current Issues */}
          <div className="mb-20">
            <h4 className="text-3xl font-bold text-gray-900 mb-10 text-center">{t.currentIssuesTitle}</h4>
            <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              <Card className="border-2 border-red-300 bg-white/95 backdrop-blur-sm hover:shadow-lg transition-all duration-300 transform hover:scale-105">
                <CardHeader>
                  <div className="flex items-center justify-between mb-4">
                    <Badge className="bg-red-500 text-white text-sm px-3 py-1">{t.needsHelp}</Badge>
                    <span className="text-sm text-gray-500">2 days ago</span>
                  </div>
                  <CardTitle className="text-xl text-gray-900 mb-3">Broken Street Light</CardTitle>
                  <CardDescription className="text-base text-gray-700 leading-relaxed">
                    The street light near the bus stop is not working. It's unsafe for people walking at night.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center text-base text-gray-600 mb-4">
                    <MapPin className="w-5 h-5 mr-2 text-red-500" />
                    MG Road & Sector 18 Metro Station
                  </div>
                  <Button
                    onClick={() => router.push("/report-issue")}
                    size="lg"
                    className="w-full bg-red-500 hover:bg-red-600 text-white font-semibold py-3 rounded-lg transition-colors duration-200"
                  >
                    {t.helpFixThis}
                  </Button>
                </CardContent>
              </Card>

              <Card className="border-2 border-blue-300 bg-white/95 backdrop-blur-sm hover:shadow-lg transition-all duration-300 transform hover:scale-105">
                <CardHeader>
                  <div className="flex items-center justify-between mb-4">
                    <Badge className="bg-blue-500 text-white text-sm px-3 py-1">{t.workingOnIt}</Badge>
                    <span className="text-sm text-gray-500">1 week ago</span>
                  </div>
                  <CardTitle className="text-xl text-gray-900 mb-3">Community Garden</CardTitle>
                  <CardDescription className="text-base text-gray-700 leading-relaxed">
                    We want to convert the empty plot into a community garden where residents can grow vegetables and
                    flowers.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center text-base text-gray-600 mb-4">
                    <MapPin className="w-5 h-5 mr-2 text-blue-500" />
                    Block C, Pocket A, Sector 12, Dwarka
                  </div>
                  <Button
                    onClick={() => router.push("/track-progress")}
                    size="lg"
                    variant="outline"
                    className="w-full border-2 border-blue-500 text-blue-600 hover:bg-blue-50 bg-transparent font-semibold py-3 rounded-lg transition-colors duration-200"
                  >
                    {t.joinProject}
                  </Button>
                </CardContent>
              </Card>

              <Card className="border-2 border-green-300 bg-white/95 backdrop-blur-sm hover:shadow-lg transition-all duration-300 transform hover:scale-105">
                <CardHeader>
                  <div className="flex items-center justify-between mb-4">
                    <Badge className="bg-green-500 text-white text-sm px-3 py-1">{t.fixed}</Badge>
                    <span className="text-sm text-gray-500">3 weeks ago</span>
                  </div>
                  <CardTitle className="text-xl text-gray-900 mb-3">Road Pothole Fixed</CardTitle>
                  <CardDescription className="text-base text-gray-700 leading-relaxed">
                    The large pothole that was causing vehicle damage has been filled by PWD after community complaints.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="flex items-center text-base text-gray-600 mb-4">
                    <MapPin className="w-5 h-5 mr-2 text-green-500" />
                    Nehru Place Main Road, Near Metro Station
                  </div>
                  <Button
                    onClick={() => router.push("/track-progress")}
                    size="lg"
                    variant="outline"
                    className="w-full border-2 border-green-500 text-green-600 hover:bg-green-50 bg-transparent font-semibold py-3 rounded-lg transition-colors duration-200"
                  >
                    {t.seeHowFixed}
                  </Button>
                </CardContent>
              </Card>
            </div>
          </div>

          {/* Call to Action */}
          <div className="text-center bg-gradient-to-r from-blue-100/90 to-green-100/90 backdrop-blur-sm rounded-2xl p-12 shadow-lg border border-white/50">
            <h4 className="text-3xl font-bold text-gray-900 mb-6">{t.ctaTitle}</h4>
            <p className="text-xl text-gray-700 mb-8 leading-relaxed max-w-2xl mx-auto">{t.ctaDescription}</p>
            <Link href="/signup">
              <Button
                size="lg"
                className="bg-green-500 hover:bg-green-600 text-white text-xl py-4 px-10 rounded-xl shadow-lg font-semibold border-2 border-green-500 hover:border-green-600 transition-all duration-200 hover:shadow-xl transform hover:scale-105"
              >
                {t.getStarted}
              </Button>
            </Link>
          </div>
        </div>
      </section>

      <footer
        className="relative border-t-2 border-gray-300 py-16 px-4 sm:px-6 lg:px-8"
        style={{
          backgroundImage: "url(/jharkhand-government-bg.jpg)",
          backgroundSize: "cover",
          backgroundPosition: "center",
          backgroundRepeat: "no-repeat",
        }}
      >
        <div className="absolute inset-0 bg-gradient-to-t from-gray-900/90 via-gray-800/85 to-gray-700/80"></div>
        <div className="max-w-6xl mx-auto relative z-10">
          <div className="grid md:grid-cols-3 gap-12">
            <div className="md:col-span-1">
              <div className="flex items-center mb-6">
                <div className="w-10 h-10 government-emblem rounded-xl flex items-center justify-center mr-4 official-seal">
                  <Users className="w-6 h-6 text-white" />
                </div>
                <h5 className="text-2xl font-bold text-white">{t.projectName}</h5>
              </div>
              <p className="text-lg text-gray-200 leading-relaxed">{t.footerTagline}</p>
            </div>

            <div>
              <h6 className="text-xl font-bold text-white mb-6">{t.contactUs}</h6>
              <div className="space-y-4">
                <div className="flex items-center text-lg text-gray-200 hover:text-yellow-300 transition-colors cursor-pointer">
                  <Phone className="w-6 h-6 mr-3 text-yellow-300" />
                  {t.call}
                </div>
                <div className="flex items-center text-lg text-gray-200 hover:text-yellow-300 transition-colors cursor-pointer">
                  <Mail className="w-6 h-6 mr-3 text-yellow-300" />
                  {t.email}
                </div>
                <div className="flex items-center text-lg text-gray-200 hover:text-yellow-300 transition-colors cursor-pointer">
                  <MapPin className="w-6 h-6 mr-3 text-yellow-300" />
                  {t.visit}
                </div>
              </div>
            </div>

            <div>
              <h6 className="text-xl font-bold text-white mb-6">{t.openHours}</h6>
              <div className="space-y-3 text-lg text-gray-200">
                <div className="flex items-start">
                  <Clock className="w-6 h-6 mr-3 text-yellow-300 mt-1" />
                  <div>
                    <div>Monday-Friday: 9 AM - 6 PM</div>
                    <div>Saturday: 10 AM - 2 PM</div>
                    <div>Sunday: Closed</div>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div className="border-t-2 border-gray-500 mt-12 pt-8 text-center">
            <p className="text-lg text-gray-300">{t.copyright}</p>
          </div>
        </div>
      </footer>
    </div>
  )
}
